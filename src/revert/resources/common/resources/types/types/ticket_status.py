# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TicketStatus(str, enum.Enum):
    OPEN = "open"
    CLOSE = "close"
    IN_PROGRESS = "in_progress"

    def visit(
        self,
        open: typing.Callable[[], T_Result],
        close: typing.Callable[[], T_Result],
        in_progress: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TicketStatus.OPEN:
            return open()
        if self is TicketStatus.CLOSE:
            return close()
        if self is TicketStatus.IN_PROGRESS:
            return in_progress()
