# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...common.resources.types.types.tpid import Tpid

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ConnectionImport(pydantic.BaseModel):
    tp_id: Tpid
    tp_access_token: str
    tp_refresh_token: str
    tp_customer_id: str = pydantic.Field(description="The emailId or a unique ID id of the user who connected the app.")
    t_id: str
    tp_account_url: typing.Optional[str]
    app_client_id: str
    app_client_secret: str
    app_id: str = pydantic.Field(description="Can be obtained from the integration dashboard.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
